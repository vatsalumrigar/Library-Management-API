{
    "swagger": "2.0",
    "info": {
        "description": "This is a  Library Management API server.",
        "title": "Library Management API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/Accounting/penaltycheck": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "check penalty of user",
                "operationId": "acc-penalty-check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LibrarianID",
                        "name": "librarianId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Payload for Penalty Check API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Payload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Accounting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/Accounting/penaltypay": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "pay penalty of user",
                "operationId": "acc-penalty-pay",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LibrarianID",
                        "name": "librarianId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Payload for Penalty Pay API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PenaltyPay"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Accounting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/Admin/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create admin",
                "operationId": "create-admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Payload for create Admin API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Admin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/Book/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create book in book collection",
                "operationId": "create-book",
                "parameters": [
                    {
                        "description": "Query Payload for create Book API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Books"
                        }
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Books"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/CreateSetting/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create app setting",
                "operationId": "create-setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AdminID",
                        "name": "adminId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Payload for create App Timings API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Timings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Timings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/Librarian/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create librarian",
                "operationId": "create-librarian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload for create Librarian API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/PenaltyPay/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "pay penalty of user",
                "operationId": "users-penalty-pay",
                "parameters": [
                    {
                        "description": "Payload for Penalty Pay API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PenaltyPay"
                        }
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/PenaltyUser/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "check penalty of users",
                "operationId": "users-penalty-check",
                "parameters": [
                    {
                        "description": "Payload for Penalty Users API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PenaltyUsers"
                        }
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/model.IsPenalty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/UpdateSetting/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update app setting",
                "operationId": "update-setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AdminID",
                        "name": "adminId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Payload for update App Timings API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Timings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Timings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/User/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create user in user collection",
                "operationId": "create-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload for create User API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/UserBookReturn/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "return book from user",
                "operationId": "user-book-return",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "uId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload for User Book Return API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserBook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/UserBookTaken/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add books to user",
                "operationId": "user-book-take",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "uId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload for User Book Taken API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserBook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/UserParam/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "show books taken by user",
                "operationId": "user-param",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ParamUser"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    }
                }
            }
        },
        "/UserSetNewPassword/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "set new password for user",
                "operationId": "user-set-new-password",
                "parameters": [
                    {
                        "description": "Payload for Set New Password API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SetNewPassword"
                        }
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/deleteAdmin/{adminId}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete admin",
                "operationId": "delete-admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "AdminID",
                        "name": "adminId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/deleteBook/{bookId}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete book from book collection",
                "operationId": "delete-book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BookID",
                        "name": "bookId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Books"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/deleteLibrarian/{librarianId}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete librarian",
                "operationId": "delete-librarian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibrarianID",
                        "name": "librarianId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/deleteUser/": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete one user from user collection",
                "operationId": "delete-one-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "uId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getAllBook/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "read books from book collection",
                "operationId": "read-books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Book Title",
                        "name": "queryWord",
                        "in": "query"
                    },
                    {
                        "description": "Query Payload for Read All Books API",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.FilterModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Books"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getAllLibrarian/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "read all librarian",
                "operationId": "read-all-librarian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getAllUser/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "read all user from user collection",
                "operationId": "read-all-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserType",
                        "name": "queryWord1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Firstname",
                        "name": "queryWord2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getHistoryBook/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get book history",
                "operationId": "book-history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "strOffset",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pagenumber",
                        "name": "strPageNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "uId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Query Payload for Book History API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HistoryPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getIssuedBook/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get issued books",
                "operationId": "book-issued",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "uId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BooksIssued"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getOneAdmin/{adminId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "read admin",
                "operationId": "read-admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "AdminID",
                        "name": "adminId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getOneBook/{bookId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "read book from book collection",
                "operationId": "read-book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BookID",
                        "name": "bookId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Books"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getOneLibrarian/{librarianId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "read one librarian",
                "operationId": "read-one-librarian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibrarianID",
                        "name": "librarianId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getOneUser/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "read one user from user collection",
                "operationId": "read-one-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "uId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/getQuantityBook/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get book title and their quantities from book collection",
                "operationId": "quantity-book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibrarianID",
                        "name": "librarianId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/operationBook/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update book quantites according to operation in book collection",
                "operationId": "operation-book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibrarianID",
                        "name": "librarianId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/updateAdmin/{adminId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update admin",
                "operationId": "update-admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "AdminID",
                        "name": "adminId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Query Payload for update Admin API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Admin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/updateBook/{bookId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update book",
                "operationId": "update-book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BookID",
                        "name": "bookId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload for update Books API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Books"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Books"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/updateLibrarian/{librarianId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update librarian",
                "operationId": "update-librarian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibrarianID",
                        "name": "librarianId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload for update Librarian API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/updateUser/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update user in user collection",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserID",
                        "name": "uId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload for update user API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "login user",
                "operationId": "user-login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload for login API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "signup user",
                "operationId": "user-signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "languageToken",
                        "name": "language",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload for Signup API",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Accounting": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "penaltydetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Pdetails"
                    }
                },
                "timepenaltypay": {
                    "type": "integer"
                },
                "totalpenalty": {
                    "type": "integer"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "pincode": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "model.Admin": {
            "type": "object",
            "required": [
                "dob",
                "email",
                "first_name",
                "last_name",
                "login",
                "mobile_no",
                "password",
                "user_type",
                "username"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/model.Address"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "boolean"
                },
                "mobile_no": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Authors": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "author_email": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Bookdetail2": {
            "type": "object",
            "required": [
                "publisher",
                "title"
            ],
            "properties": {
                "author": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Authors"
                    }
                },
                "publisher": {
                    "$ref": "#/definitions/model.Publishers"
                },
                "quantities": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Bookdetails": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "book_id": {
                    "type": "string"
                },
                "time_taken": {
                    "type": "integer"
                },
                "timepenaltycalc": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Books": {
            "type": "object",
            "required": [
                "author",
                "description",
                "genre",
                "publisher",
                "status",
                "title"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "author": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Authors"
                    }
                },
                "cost": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "penalty": {
                    "type": "integer"
                },
                "publisher": {
                    "$ref": "#/definitions/model.Publishers"
                },
                "quantities": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.BooksIssued": {
            "type": "object",
            "properties": {
                "bookid": {
                    "type": "string"
                },
                "booksleft": {
                    "type": "integer"
                },
                "booktitle": {
                    "type": "string"
                },
                "cost": {
                    "type": "integer"
                },
                "issuedquantity": {
                    "type": "integer"
                },
                "issuedto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IssueDetails"
                    }
                }
            }
        },
        "model.FilterModel": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.HistoryPayload": {
            "type": "object",
            "properties": {
                "booktitle": {
                    "type": "string"
                }
            }
        },
        "model.IsPenalty": {
            "type": "object",
            "properties": {
                "bookname": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "penalty": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.IssueDetails": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.ParamUser": {
            "type": "object",
            "required": [
                "email",
                "user_id",
                "username"
            ],
            "properties": {
                "books_taken": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Bookdetail2"
                    }
                },
                "email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Payload": {
            "type": "object",
            "required": [
                "penaltydetail",
                "userid"
            ],
            "properties": {
                "penaltydetail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PenaltyDetails"
                    }
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.Pdetails": {
            "type": "object",
            "properties": {
                "booktitle": {
                    "type": "string"
                },
                "librarianId": {
                    "type": "string"
                },
                "penaltyamount": {
                    "type": "integer"
                },
                "penaltypay": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "reasontype": {
                    "type": "integer"
                },
                "timepenaltycheck": {
                    "type": "integer"
                }
            }
        },
        "model.PenaltyDetails": {
            "type": "object",
            "properties": {
                "booktitle": {
                    "type": "string"
                },
                "reason": {
                    "type": "integer"
                }
            }
        },
        "model.PenaltyPay": {
            "type": "object",
            "required": [
                "pay_amount",
                "username"
            ],
            "properties": {
                "pay_amount": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.PenaltyUsers": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Publishers": {
            "type": "object",
            "required": [
                "company_name",
                "owner",
                "published_on"
            ],
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "published_on": {
                    "type": "string"
                },
                "publisher_email": {
                    "type": "string"
                }
            }
        },
        "model.SetNewPassword": {
            "type": "object",
            "required": [
                "email",
                "newpassword",
                "oldpassword"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "newpassword": {
                    "type": "string"
                },
                "oldpassword": {
                    "type": "string"
                }
            }
        },
        "model.Times": {
            "type": "object",
            "properties": {
                "closetime": {
                    "type": "string"
                },
                "day": {
                    "type": "string"
                },
                "isopen": {
                    "type": "boolean"
                },
                "starttime": {
                    "type": "string"
                }
            }
        },
        "model.Timings": {
            "type": "object",
            "properties": {
                "timing": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Times"
                    }
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/model.Address"
                },
                "books_taken": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Bookdetails"
                    }
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "object",
                    "additionalProperties": true
                },
                "isfirstlogin": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "boolean"
                },
                "mobile_no": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_penalty": {
                    "type": "integer"
                },
                "user_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserBook": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "description": "User_Id string `json:\"user_id\" bson:\"User_Id\" binding:\"required\"`",
                    "type": "string"
                }
            }
        }
    }
}